//print "in int5";

//aliases
alias sysno S0;
alias res S1;
alias psp S2;
alias i S3;
alias novp S4;
alias j S5;
alias ppid S6;
alias chpid S7;
alias chpcb S8;
alias src S9;
alias dst S10;
alias k S11;
alias ppcb S12;
alias nopa S13;

psp = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
sysno = [psp - 1];
ppid = (PTBR - PAGE_TABLE)/8;
ppcb = READY_LIST + ppid*32;

if(sysno==8)then
//	print "in fork";
	i = READY_LIST;
	while((i<FAT)&&([i + 1]!=0))do
		i = i + 32;
	endwhile;
	if(i==FAT)then
		res = -1;
	else
		chpid = (i-READY_LIST)/32;
		chpcb = i;
		[chpcb]=chpid;
		i = MEM_LIST + 25;
		while((i<FILE_TABLE)&&([i]!=0))do
			i = i + 1;
		endwhile;
		if(i==FILE_TABLE)then
			res = -1;
		else
			[i] = 1;
			j = 0;
			src = [PTBR + 6]*512;
			dst = (i-MEM_LIST)*512;
			while(j<512)do
				[dst + j] = [src + j];
				j = j + 1;
			endwhile;
			[PAGE_TABLE + chpid*8 + 6] = i-MEM_LIST;
			[PAGE_TABLE + chpid*8 + 7] = "01";
			i=PTBR;
			j=PAGE_TABLE + chpid*8;
			while(i<PTBR+6)do
				[j] = [i];
				[j + 1] = [i + 1];
				if(([i + 1]=="01")||([i + 1]=="11"))then
					[ MEM_LIST + [i] ] = [ MEM_LIST + [i] ] + 1;
				else
					if([i]>447)then
						[DISK_LIST + [i]] = [DISK_LIST + [i]] + 1;
					endif;	
				endif;
				i = i + 2;
				j = j + 2;
			endwhile;
			[chpcb + 5] = PAGE_TABLE + chpid*8;			//ptbr
			[chpcb + 6] = 4;			
			[chpcb + 4] = [psp];							//ip
			[chpcb + 3] = SP - 1;						//sp
			[chpcb + 2] = BP;
			[chpcb + 7] = R0;
			[chpcb + 8] = R1;
			[chpcb + 9] = R2;
			[chpcb + 10] = R3;
			[chpcb + 11] = R4;
			[chpcb + 12] = R5;
			[chpcb + 13] = R6;
			[chpcb + 14] = R7;
			[chpcb + 31] = ppid;
			i = 0;
			while(i<8)do
				if([ppcb + 15 + i]!=-1)then
					[chpcb + 15 + i] = [ppcb + 15 + i];
					[chpcb + 15 + i + 1] = [ppcb + 15 + i + 1];
					[FILE_TABLE + [ppcb + 15 + i]*2 + 1] = [FILE_TABLE + [ppcb + 15 + i]*2 + 1] + 1;
				endif;
				i = i + 2;
			endwhile;
			[chpcb + 1] = 1;
			res = chpid;
			[([[chpcb + 5] + 2 * ((SP-2) / 512)] * 512) + ((SP-2) % 512)] = -2;
		endif;
	endif;
endif;
store(6,20);
[psp - 2] = res;
breakpoint;
ireturn;
